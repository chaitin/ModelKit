// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ModelsColumns holds the columns for the "models" table.
	ModelsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "user_id", Type: field.TypeUUID, Nullable: true},
		{Name: "model_name", Type: field.TypeString},
		{Name: "model_type", Type: field.TypeString},
		{Name: "show_name", Type: field.TypeString, Nullable: true},
		{Name: "api_base", Type: field.TypeString},
		{Name: "api_key", Type: field.TypeString},
		{Name: "api_version", Type: field.TypeString, Nullable: true},
		{Name: "api_header", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "is_internal", Type: field.TypeBool, Default: false},
		{Name: "provider", Type: field.TypeString},
		{Name: "status", Type: field.TypeString, Default: "active"},
		{Name: "parameters", Type: field.TypeJSON, Nullable: true},
		{Name: "context_length", Type: field.TypeInt, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// ModelsTable holds the schema information for the "models" table.
	ModelsTable = &schema.Table{
		Name:       "models",
		Columns:    ModelsColumns,
		PrimaryKey: []*schema.Column{ModelsColumns[0]},
	}
	// ModelProvidersColumns holds the columns for the "model_providers" table.
	ModelProvidersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "api_base", Type: field.TypeString},
		{Name: "priority", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// ModelProvidersTable holds the schema information for the "model_providers" table.
	ModelProvidersTable = &schema.Table{
		Name:       "model_providers",
		Columns:    ModelProvidersColumns,
		PrimaryKey: []*schema.Column{ModelProvidersColumns[0]},
	}
	// ModelProviderModelsColumns holds the columns for the "model_provider_models" table.
	ModelProviderModelsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "provider_id", Type: field.TypeString, Nullable: true},
	}
	// ModelProviderModelsTable holds the schema information for the "model_provider_models" table.
	ModelProviderModelsTable = &schema.Table{
		Name:       "model_provider_models",
		Columns:    ModelProviderModelsColumns,
		PrimaryKey: []*schema.Column{ModelProviderModelsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "model_provider_models_model_providers_models",
				Columns:    []*schema.Column{ModelProviderModelsColumns[4]},
				RefColumns: []*schema.Column{ModelProvidersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ModelsTable,
		ModelProvidersTable,
		ModelProviderModelsTable,
	}
)

func init() {
	ModelsTable.Annotation = &entsql.Annotation{
		Table: "models",
	}
	ModelProvidersTable.Annotation = &entsql.Annotation{
		Table: "model_providers",
	}
	ModelProviderModelsTable.ForeignKeys[0].RefTable = ModelProvidersTable
	ModelProviderModelsTable.Annotation = &entsql.Annotation{
		Table: "model_provider_models",
	}
}
